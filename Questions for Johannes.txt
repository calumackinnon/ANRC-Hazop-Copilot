Hi Johannes,

Firstly congratulations on a remarkable PhD and thank you for returning my message.
My colleague has requested time to add to this message with other questions, however I want to send you a preliminary message now in case it suits your availability better...

Our main intention/question is this. We would like to replicate your method using one or more case studies which you wrote into the dissertation. Are there any sources of data outside of the PhD dissertation which we will need in order to replicate case study 1 - the hexane storage tank?

To replicate your method and hexane case study, we began transferring the scripts which you included in the appendices sections into a Python IDE, however we did not manage to structure and execute these in error-free fashion. Hence, the following is a list of some particular issues we are facing.

1. Variables definitions which we are seeking.

In Appendix D, the Equipment entity library, we see that the connection pipe contains block of code such as follows...

def connection_pipe(identifier, circumstances, control_instance, transportable, operating_modes, max_pressure, max_temperature):

    equipment = equipment_onto.ConnectionPipeEntity
    equipment_entity = MyEquipmentEntity(equipment, identifier, circumstances, transportable, operating_modes, max_pressure, max_temperature)
    equipment_entity.set_intended_function(process_onto.Transport)
    equipment_entity.set_apparatus(equipment_onto.NoApparatus)
    equipment_entity.set_control_instance(control_instance)
    equipment_entity.assemble_ontology_object(equipment)

Could you say where "equipment.onto" is first defined? Same question, again, for all the variables called "xxxxxxxx_onto" where xxxxxxxx is effect, process, substance, deviation, causes, risk_assessment, consequence, boundary and site.

In Appendix C (The main routine of the knowledge-based system):-
"default_world", "results", and "pre_processing"

In Appendix Q (Inference and Analysis) - "prep", and "cbr".

2. Understanding

subsequent_deviations = args[4]


Calum: in appendicesAll.py, everything above the line
#%% Appendix R - ...
is basically a set of references to everything in the code we can't directly tell what it is. It would be great to ask what was the structure of the files used, and if some of these missing references could be shared with us.

